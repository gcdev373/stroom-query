/*
 * Copyright 2017 Crown Copyright
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
sourceSets {
    // This lets us use different directories for our integration tests.
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    // This means our integration tests get all the dependencies from our tests and we don't need to specify them twice.
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

// This task lets us run the actual integration tests.
task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    testLogging {
        events "standardOut", "started", "passed", "skipped", "failed"
    }
}

// These lines pull the integration test task into our build process.
check.dependsOn integrationTest
integrationTest.mustRunAfter test

// This means the reports from our integration tests won't over-write the reports from our unit tests.
tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

dependencies {
    //--------Project----------
    compile project(':stroom-query-api')
    compile project(':stroom-query-common')
    compile project(':stroom-query-audit')

    //--------Stroom libs------
    compile libs.eventLogging
    compile libs.stroomExpression

    //--------3rd party--------
    compile libs.kafka
    compile libs.dropwizard_auth
    compile libs.dropwizard_auth_jwt
    compile libs.slf4j_api

    compile libs.junit
    compile libs.assertj
    compile 'org.apache.directory.studio:org.apache.commons.io:2.4'
    compile libs.wiremock

    compile libs.dropwizard_testing

    integrationTestCompile libs.dropwizard_core
    integrationTestCompile libs.jackson_annotations
    integrationTestCompile libs.dropwizard_flyway
    integrationTestCompile project(':stroom-query-hibernate')
    integrationTestRuntime libs.mariadb_connector
}
